{
  "content": "<p>ReactアプリケーションでSEO対策を行うためには、各ページごとに適切なメタタグを設定する必要があります。今回は、その実装方法について解説します。</p>\n<h3>1. コンポーネントの基本構造</h3>\n<pre><code class=\"language-javascript\">const MetaTags = ({ \n  title,\n  description,\n  keywords,\n  ogImage,\n  twitterSite,\n  twitterCreator\n}) =&gt; {\n  // ...\n};\n</code></pre>\n<p>プロパティとして以下の値を受け取ります：</p>\n<ul>\n<li><strong>title</strong>: ページのタイトル</li>\n<li><strong>description</strong>: ページの説明文</li>\n<li><strong>keywords</strong>: 検索キーワード</li>\n<li><strong>ogImage</strong>: OGP画像のURL</li>\n<li><strong>twitterSite</strong>: TwitterのサイトアカウントID</li>\n<li><strong>twitterCreator</strong>: Twitterの作成者アカウントID</li>\n</ul>\n<h3>2. useEffectによるメタタグの更新</h3>\n<pre><code class=\"language-javascript\">useEffect(() =&gt; {\n  // タイトルの設定\n  document.title = title ? `${title} | Portfolio` : 'Portfolio';\n\n  // 基本的なメタタグ\n  document.querySelector('meta[name=&quot;description&quot;]')?.setAttribute('content', description || '');\n  document.querySelector('meta[name=&quot;keywords&quot;]')?.setAttribute('content', keywords || '');\n}, [title, description, keywords]);\n</code></pre>\n<p>useEffectを使用することで、コンポーネントのマウント時やプロパティの更新時にメタタグを動的に更新します。</p>\n<h3>3. OGPタグの設定</h3>\n<pre><code class=\"language-javascript\">// OGPタグの更新\ndocument.querySelector('meta[property=&quot;og:title&quot;]')?.setAttribute('content', title ? `${title} | Portfolio` : 'Portfolio');\ndocument.querySelector('meta[property=&quot;og:description&quot;]').setAttribute('content', description || '');\n</code></pre>\n<p>OGP（Open Graph Protocol）は、FacebookやTwitterなどのSNSでシェアされた際の表示を制御するためのメタタグです。</p>\n<h3>4. Twitterカードの設定</h3>\n<pre><code class=\"language-javascript\">// Twitterカードの設定\ndocument.querySelector('meta[name=&quot;twitter:card&quot;]').setAttribute('content', 'summary_large_image');\ndocument.querySelector('meta[name=&quot;twitter:title&quot;]').setAttribute('content', title);\n</code></pre>\n<p>Twitterカードは、Twitterでシェアされた際の表示を最適化するための設定です。</p>\n<h3>5. コンポーネントの使用方法</h3>\n<pre><code class=\"language-javascript\">import MetaTags from '../components/MetaTags';\n\nconst BlogPost = () =&gt; {\n  return (\n    &lt;&gt;\n      &lt;MetaTags\n        title=&quot;記事タイトル&quot;\n        description=&quot;記事の説明&quot;\n        keywords=&quot;キーワード1, キーワード2&quot;\n        ogImage=&quot;https://example.com/image.jpg&quot;\n        twitterSite=&quot;@siteaccount&quot;\n        twitterCreator=&quot;@creator&quot;\n      /&gt;\n      // ページコンテンツ\n    &lt;/&gt;\n  );\n};\n</code></pre>\n<h3>6. 注意点と実装のポイント</h3>\n<ul>\n<li>Optional Chainingを使用して安全にメタタグを更新</li>\n<li>未設定の値に対してフォールバック値を用意</li>\n<li>依存配列を適切に設定してパフォーマンスを最適化</li>\n</ul>\n<p>このような実装により、SPAでありながらSEOに対応したReactアプリケーションを構築することができます。</p>\n"
}