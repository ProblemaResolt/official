{
  "content": "<p>Reactでテキストを1文字ずつアニメーション表示する方法を解説します。CSSカスタムプロパティとReactコンポーネントを組み合わせて実現します。</p>\n<h3>1. ユーティリティ関数の実装</h3>\n<pre><code class=\"language-javascript\">// textAnimation.jsx\nimport React from 'react';\n\nexport const splitTextToSpans = (text) =&gt; {\n  return text.split('').map((char, i) =&gt; (\n    &lt;span \n      key={i} \n      className=&quot;drop-animation&quot;\n      style={{ '--char-index': i }}\n    &gt;\n      {char}\n    &lt;/span&gt;\n  ));\n};\n</code></pre>\n<p>この関数は以下の処理を行います：</p>\n<ul>\n<li>テキストを1文字ずつ分割</li>\n<li>各文字をspanタグでラップ</li>\n<li>CSSアニメーション用のクラスを付与</li>\n<li>カスタムプロパティで文字のインデックスを設定</li>\n</ul>\n<h3>2. CSSアニメーションの実装</h3>\n<pre><code class=\"language-css\">.drop-animation {\n  opacity: 0;\n  animation: dropIn 0.5s ease-out forwards;\n  animation-delay: calc(var(--char-index) * 0.1s);\n}\n\n@keyframes dropIn {\n  0% {\n    opacity: 0;\n    transform: translateY(-20px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n</code></pre>\n<h3>3. 使用例</h3>\n<pre><code class=\"language-javascript\">import { splitTextToSpans } from '../utils/textAnimation';\n\nconst AnimatedText = () =&gt; {\n  return (\n    &lt;div&gt;\n      {splitTextToSpans('Hello, World!')}\n    &lt;/div&gt;\n  );\n};\n</code></pre>\n<h3>4. 実装のポイント</h3>\n<ul>\n<li><strong>カスタムプロパティの活用</strong>: --char-indexを使用して各文字の遅延時間を制御</li>\n<li><strong>アニメーションの最適化</strong>: transformとopacityのみを使用してパフォーマンスを確保</li>\n<li><strong>Reactのキー管理</strong>: mapで生成する要素に適切なkeyを設定</li>\n</ul>\n<h3>5. 応用例</h3>\n<p>この実装は以下のようなケースで活用できます：</p>\n<ul>\n<li>ページタイトルのアニメーション</li>\n<li>ローディング時のテキストアニメーション</li>\n<li>モーダル表示時の演出</li>\n</ul>\n<h3>6. パフォーマンスの考慮点</h3>\n<p>大量の文字に対してアニメーションを適用する場合は、以下の点に注意が必要です：</p>\n<ul>\n<li>文字数が多い場合は遅延時間を調整</li>\n<li>will-changeプロパティの適切な使用</li>\n<li>アニメーション完了後のクリーンアップ</li>\n</ul>\n<p>このような実装により、シンプルながら効果的なテキストアニメーションを実現することができます。</p>\n"
}
